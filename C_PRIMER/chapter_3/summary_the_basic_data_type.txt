Keyword:
    The basic data types are set up using 11 Keyword:int ,long ,short ,unsigned ,char , float ,double ,
signed ,_Bool ,_Complex ,and _Imaginary.

Signed Integers:
These can have positive and negative values:
    int--The basic type for a given system.C guarantees at least 16 bits for int.
    short or short int -- The largest short integer is no larger than the largest int and may be smaller.
    C guarantees at least 16 bits for it.
    long or long int -- Can hold an integer at least as large as the largest int and possible larger.C 
    gurantees at least 32 bits for it.
    long long or long long int -- This type can hold an integer as least as large as the largest long and 
    possible larger.The long long type is least 64 bits.
Typically,long will be bigger than short,and int will be the same as one of the two.For example,old Dos-based
systems for the PC provided 16 bits short and int and 32 bits long.

Unsigned Integers:
These have zero or positive values only.This extends the range of the largest possible number.Use the Keyword
unsigned before the desired type:unsigned int,unsigned long,unsigned short.A lone unsigned is the same as 
unsigned int.

Character:
These are typographic symbols such as A,& adn +.By definition,the char type use 1 byte of memory to represnet
a character.Historically,this character byte has most often been 8 bits,but it can be 16 bits or larger.,if
needed to represent the base character set.
    char -- The Keyword for this type.Some implementations use a signed char,but others use an unsigned char.
C enables you to use the Keywords signed and unsigned to specify which form you want.

Boolean:
Boolean values represent true or false;C use 1 for true and 0 for false.
    _Bool--The keyword for this type.It is an unsigned int and need only be large enough to accommodate the 
    range 0 through 1.

Real Floatng Point:
These can have positive or negatibe values:
    float--The basic floating-point type for the system;it can represent at least six significant figures 
    accurately. 
    double -- A (possibly) larger unit for holding floating-point numbers.It may allow more significant figures
    (at least 10,typically more) and perhaps larger exponents than float.
    long double --A (possily) even larger unit for holding floating-point numbers.It may allow more significant
    figures and perhaps larger exponents than double.

Complex and Imaginary Floating Point:
The imaginary types are optional .The real and imaginary components are based on corresponding real type:
    floating _Complex
    double _Complex
    long double _Complex
    float _Imaginary
    double _Imaginary
    long double _Imaginary

Summary:How to Declare a Simple Variable?
1.Choose the type you need.
2.Choose a name for the variable using the allowed characters.
3.Using the following foramt for a declaration statement:
    type-specificer variable-name;

    The type-specificer is formed from one or more of the type keywords;here are example of declarations:
    int erest;
    unsigned short cash;
4.You can declare more than one variable of the same type by separating the variable names with commas,here's
an example:
    char ch,init,ans;
5.You can initialize a variable in a declaration statement:
    float mass = 6.0E23;

TYPE SIZES
What type sizes does your system use?check out the typesize.c program.
C has a built-in operator called sizeof that gives sizes in bytes.C99 and C11 provide a %zd specificer for
this type used by sizeof.
// The output:
    Type int has a size of 4 bytes.
    Type char has a size of 1 bytes.
    Type long has a size of 4 bytes.
    Type long long has a size of 8 bytes.
    Type double has a size of 8 bytes.
    Type long double has a size of 16 bytes.
This program found the size of only six types,but you can easily modify it to find the size of any other that 
interests you.Note that the size of char is necessarily 1 byte because C defines the size of 1 byte in terms of 
char.

Using data types
When you develop a program,note the variables you need and which type they should be.Most likely,you can use
int or possible float for the numbers and char for the characters.Declare them at the beginning of the functon
that uses them.Choose a name for the variable that suggests its meaning.When you initialize a varibale,match 
the constant type to the variable type.
    int apples = 3;   /* RIGHT   */
    int oranges 3.0;  /* POOR FORM */
C is more forgiving about type mismatches than,say,Pascal.C compilers allow the second initialization,but 
they might complain,particularly if you have activated a higher warning level.It is best not to develop 
sloppy habits.

When you initialize a variable of one numeric type to a value of a different type.C converts the value to match 
the variable.This means you may lose some data.
    int cost = 12.99;  /* initializing  an int to a double  */
    float pi = 3.1415926536; /* initializing a float to a double */

The first declaration assigns 12 to cost;when converting float-point values to integers,C simply throws 
away the decimal part(truncation) instead of rounding.The second declaration loses some precision,because 
a float is guranteed to represent only first six digits accurately.Compliers may issue a warning(but's don't 
have it) if you make such initializations.

Many programmers and organizations have systematic conventions for assigning variable names in which the indicates
the type of variable.For example,you could use an i_ prefix to indicate type int and us_ prefix to indicate
unsigned short ,so i_smart would be instantly recognizable as a type int variable and us_verysmart would be 
an unsigned short variable.





